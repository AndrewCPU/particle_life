Pseudocode:

List<Particle> particles = List.of(.....);

for(Particle particle in particles) {

}

affection.calculate(Particle target, Particle particle, double distance_sq){
		Vector2d vector2d = new Vector2d(0,0);
		double force = pointyMultiplier.calculate(minimumDistance,maximumDistance,distance_sq,strength);
		vector2d.add(a.position);
		vector2d.subtract(b.position);
		vector2d.normalize();
		vector2d.multiply(force);
		return vector2d;
}

calculateForces(World world, Particle target){
		Vector2d acceleration = new Vector2d(0, 0);
		int particleCount = world.particles.length;
		for(int i = 0; i<particleCount; i++){
			Particle particle = world.particles[i];
			if(particle == target) continue;
			ParticleAffection affection = ourAffections[particle.type.index];
			double distance_sq = particle.position.distance_sq(target.position);
			double maxDist = affection.maximumDistance;
			maxDist *= maxDist;
			if(distance_sq > maxDist){
				continue;
			}
			acceleration.add(affection.calculate(target, particle, distance_sq));
		}
		return acceleration;
}
