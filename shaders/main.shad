__kernel void vec2_distance(__global float *vectors, __global float *result, int num_points) {
    int i = get_global_id(0);
    int j = get_global_id(1);
    if (i >= num_points || j >= num_points)
        return;

    if (result[i * num_points + j] > 0) {
        return;
    }
    float x1 = vectors[2 * j];
    float x2 = vectors[2 * i];
    float y1 = vectors[2 * j + 1];
    float y2 = vectors[2 * i + 1];
    float x_diff = x1 - x2;
    float y_diff = y1 - y2;
    float val = sqrt(x_diff * x_diff + y_diff * y_diff);
    result[i * num_points + j] = val;
    result[j * num_points + i] = val;
}
